--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local obf_stringchar = string.char;
local obf_stringbyte = string.byte;
local obf_stringsub = string.sub;
local obf_bitlib = bit32 or bit;
local obf_XOR = obf_bitlib.bxor;
local obf_tableconcat = table.concat;
local obf_tableinsert = table.insert;
local function LUAOBFUSACTOR_DECRYPT_STR_0(LUAOBFUSACTOR_STR, LUAOBFUSACTOR_KEY)
	local FlatIdent_10DED = 0;
	local result;
	while true do
		if (FlatIdent_10DED == 1) then
			return obf_tableconcat(result);
		end
		if (FlatIdent_10DED == 0) then
			result = {};
			for i = 1, #LUAOBFUSACTOR_STR do
				obf_tableinsert(result, obf_stringchar(obf_XOR(obf_stringbyte(obf_stringsub(LUAOBFUSACTOR_STR, i, i + 1)), obf_stringbyte(obf_stringsub(LUAOBFUSACTOR_KEY, 1 + (i % #LUAOBFUSACTOR_KEY), 1 + (i % #LUAOBFUSACTOR_KEY) + 1))) % 256));
			end
			FlatIdent_10DED = 1;
		end
	end
end
local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), LUAOBFUSACTOR_DECRYPT_STR_0("\159\141", "\126\177\163\187\69\134\219\167"), function(v30)
		if (v1(v30, 2) == 81) then
			local FlatIdent_76979 = 0;
			while true do
				if (FlatIdent_76979 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v87 = v2(v0(v30, 16));
			if v19 then
				local FlatIdent_7147 = 0;
				local v97;
				while true do
					if (FlatIdent_7147 == 0) then
						v97 = v5(v87, v19);
						v19 = nil;
						FlatIdent_7147 = 1;
					end
					if (FlatIdent_7147 == 1) then
						return v97;
					end
				end
			else
				return v87;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v88 = (v31 / (2 ^ (v32 - 1))) % (2 ^ (((v33 - 1) - (v32 - 1)) + 1));
			return v88 - (v88 % 1);
		else
			local FlatIdent_6D884 = 0;
			local v89;
			while true do
				if (0 == FlatIdent_6D884) then
					v89 = 2 ^ (v32 - 1);
					return (((v31 % (v89 + v89)) >= v89) and 1) or 0;
				end
			end
		end
	end
	local function v21()
		local FlatIdent_5AA23 = 0;
		local v34;
		while true do
			if (FlatIdent_5AA23 == 0) then
				v34 = v1(v16, v18, v18);
				v18 = v18 + 1;
				FlatIdent_5AA23 = 1;
			end
			if (FlatIdent_5AA23 == 1) then
				return v34;
			end
		end
	end
	local function v22()
		local FlatIdent_3F15E = 0;
		local v35;
		local v36;
		while true do
			if (FlatIdent_3F15E == 1) then
				return (v36 * 256) + v35;
			end
			if (FlatIdent_3F15E == 0) then
				v35, v36 = v1(v16, v18, v18 + 2);
				v18 = v18 + 2;
				FlatIdent_3F15E = 1;
			end
		end
	end
	local function v23()
		local v37, v38, v39, v40 = v1(v16, v18, v18 + 3);
		v18 = v18 + 4;
		return (v40 * 16777216) + (v39 * 65536) + (v38 * 256) + v37;
	end
	local function v24()
		local FlatIdent_69270 = 0;
		local v41;
		local v42;
		local v43;
		local v44;
		local v45;
		local v46;
		while true do
			if (FlatIdent_69270 == 3) then
				if ((v45 == 0) or (4593 <= 2672)) then
					if ((v44 == 0) or (1168 > 3156)) then
						return v46 * 0;
					else
						local FlatIdent_8D83D = 0;
						while true do
							if (FlatIdent_8D83D == 0) then
								v45 = 1;
								v43 = 0;
								break;
							end
						end
					end
				elseif (v45 == 2047) then
					return ((v44 == 0) and (v46 * (1 / 0))) or (v46 * NaN);
				end
				return v8(v46, v45 - 1023) * (v43 + (v44 / (2 ^ 52)));
			end
			if (FlatIdent_69270 == 0) then
				v41 = v23();
				v42 = v23();
				FlatIdent_69270 = 1;
			end
			if (FlatIdent_69270 == 2) then
				v45 = v20(v42, 21, 31);
				v46 = ((v20(v42, 32) == 1) and -1) or 1;
				FlatIdent_69270 = 3;
			end
			if (FlatIdent_69270 == 1) then
				v43 = 1;
				v44 = (v20(v42, 1, 20) * (2 ^ 32)) + v41;
				FlatIdent_69270 = 2;
			end
		end
	end
	local function v25(v47)
		local v48;
		if (not v47 or (572 > 4486)) then
			local FlatIdent_1743D = 0;
			while true do
				if (FlatIdent_1743D == 0) then
					v47 = v23();
					if (v47 == 0) then
						return "";
					end
					break;
				end
			end
		end
		v48 = v3(v16, v18, (v18 + v47) - 1);
		v18 = v18 + v47;
		local v49 = {};
		for v63 = 1, #v48 do
			v49[v63] = v2(v1(v3(v48, v63, v63)));
		end
		return v6(v49);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local FlatIdent_7366E = 0;
		local v50;
		local v51;
		local v52;
		local v53;
		local v54;
		local v55;
		while true do
			if (FlatIdent_7366E == 0) then
				v50 = {};
				v51 = {};
				v52 = {};
				v53 = {v50,v51,nil,v52};
				FlatIdent_7366E = 1;
			end
			if (FlatIdent_7366E == 1) then
				v54 = v23();
				v55 = {};
				for v65 = 1, v54 do
					local v66 = v21();
					local v67;
					if ((1404 == 1404) and (v66 == 1)) then
						v67 = v21() ~= 0;
					elseif (v66 == 2) then
						v67 = v24();
					elseif (v66 ~= 3) then
					else
						v67 = v25();
					end
					v55[v65] = v67;
				end
				v53[3] = v21();
				FlatIdent_7366E = 2;
			end
			if (FlatIdent_7366E == 2) then
				for v69 = 1, v23() do
					local FlatIdent_699E4 = 0;
					local v70;
					while true do
						if (FlatIdent_699E4 == 0) then
							v70 = v21();
							if (v20(v70, 1, 1) ~= 0) then
							else
								local v93 = v20(v70, 2, 3);
								local v94 = v20(v70, 4, 6);
								local v95 = {v22(),v22(),nil,nil};
								if ((v93 == 0) or (3748 < 2212)) then
									v95[3] = v22();
									v95[4] = v22();
								elseif ((v93 == 1) or (1180 == 2180)) then
									v95[3] = v23();
								elseif ((4090 < 4653) and (v93 == 2)) then
									v95[3] = v23() - (2 ^ 16);
								elseif ((v93 ~= 3) or (2652 < 196)) then
								else
									local FlatIdent_781F8 = 0;
									while true do
										if (FlatIdent_781F8 == 0) then
											v95[3] = v23() - (2 ^ 16);
											v95[4] = v22();
											break;
										end
									end
								end
								if (v20(v94, 1, 1) ~= 1) then
								else
									v95[2] = v55[v95[2]];
								end
								if (v20(v94, 2, 2) ~= 1) then
								else
									v95[3] = v55[v95[3]];
								end
								if ((4135 < 4817) and (v20(v94, 3, 3) ~= 1)) then
								else
									v95[4] = v55[v95[4]];
								end
								v50[v69] = v95;
							end
							break;
						end
					end
				end
				for v71 = 1, v23() do
					v51[v71 - 1] = v28();
				end
				return v53;
			end
		end
	end
	local function v29(v57, v58, v59)
		local v60 = v57[1];
		local v61 = v57[2];
		local v62 = v57[3];
		return function(...)
			local FlatIdent_1BAD7 = 0;
			local v73;
			local v74;
			local v75;
			local v76;
			local v77;
			local v78;
			local v79;
			local v80;
			local v81;
			local v82;
			local v83;
			local v84;
			local v85;
			local v86;
			while true do
				if (FlatIdent_1BAD7 == 5) then
					while true do
						local FlatIdent_506A5 = 0;
						while true do
							if (FlatIdent_506A5 == 0) then
								v85 = v73[v77];
								v86 = v85[1];
								FlatIdent_506A5 = 1;
							end
							if (FlatIdent_506A5 == 1) then
								if (v86 <= 58) then
									if (v86 <= 28) then
										if (v86 <= 13) then
											if ((272 == 272) and (v86 <= 6)) then
												if ((100 <= 3123) and (v86 <= 2)) then
													if ((v86 <= 0) or (1369 > 4987)) then
														v83[v85[2]] = #v83[v85[3]];
													elseif ((v86 == 1) or (863 >= 4584)) then
														local FlatIdent_1454F = 0;
														local v138;
														while true do
															if (FlatIdent_1454F == 0) then
																v138 = v85[2];
																v83[v138](v13(v83, v138 + 1, v78));
																break;
															end
														end
													else
														local FlatIdent_8E29D = 0;
														local v139;
														local v140;
														local v141;
														local v142;
														while true do
															if (1 == FlatIdent_8E29D) then
																v78 = (v141 + v139) - 1;
																v142 = 0;
																FlatIdent_8E29D = 2;
															end
															if (FlatIdent_8E29D == 2) then
																for v312 = v139, v78 do
																	local FlatIdent_6FA1 = 0;
																	while true do
																		if (0 == FlatIdent_6FA1) then
																			v142 = v142 + 1;
																			v83[v312] = v140[v142];
																			break;
																		end
																	end
																end
																break;
															end
															if (FlatIdent_8E29D == 0) then
																v139 = v85[2];
																v140, v141 = v76(v83[v139](v13(v83, v139 + 1, v85[3])));
																FlatIdent_8E29D = 1;
															end
														end
													end
												elseif (v86 <= 4) then
													if (v86 > 3) then
														v83[v85[2]] = v83[v85[3]] - v85[4];
													else
														v83[v85[2]] = v83[v85[3]] - v85[4];
													end
												elseif ((v86 > 5) or (724 >= 1668)) then
													local FlatIdent_2DB3E = 0;
													local v145;
													local v146;
													local v147;
													while true do
														if (FlatIdent_2DB3E == 1) then
															v147 = 0;
															for v315 = v145, v85[4] do
																local FlatIdent_61B23 = 0;
																while true do
																	if (FlatIdent_61B23 == 0) then
																		v147 = v147 + 1;
																		v83[v315] = v146[v147];
																		break;
																	end
																end
															end
															break;
														end
														if (FlatIdent_2DB3E == 0) then
															v145 = v85[2];
															v146 = {v83[v145](v13(v83, v145 + 1, v78))};
															FlatIdent_2DB3E = 1;
														end
													end
												elseif ((428 < 1804) and (v83[v85[2]] ~= v83[v85[4]])) then
													v77 = v77 + 1;
												else
													v77 = v85[3];
												end
											elseif (v86 <= 9) then
												if (v86 <= 7) then
													local FlatIdent_E652 = 0;
													local v115;
													while true do
														if (0 == FlatIdent_E652) then
															v115 = v85[2];
															v83[v115](v13(v83, v115 + 1, v85[3]));
															break;
														end
													end
												elseif (v86 == 8) then
													local FlatIdent_27957 = 0;
													local v148;
													local v149;
													local v150;
													local v151;
													while true do
														if (0 == FlatIdent_27957) then
															v148 = v85[2];
															v149, v150 = v76(v83[v148](v13(v83, v148 + 1, v85[3])));
															FlatIdent_27957 = 1;
														end
														if (FlatIdent_27957 == 1) then
															v78 = (v150 + v148) - 1;
															v151 = 0;
															FlatIdent_27957 = 2;
														end
														if (FlatIdent_27957 == 2) then
															for v318 = v148, v78 do
																local FlatIdent_5CC3B = 0;
																while true do
																	if (0 == FlatIdent_5CC3B) then
																		v151 = v151 + 1;
																		v83[v318] = v149[v151];
																		break;
																	end
																end
															end
															break;
														end
													end
												else
													local FlatIdent_99389 = 0;
													local v152;
													while true do
														if (FlatIdent_99389 == 0) then
															v152 = v85[2];
															v83[v152] = v83[v152](v83[v152 + 1]);
															break;
														end
													end
												end
											elseif ((v86 <= 11) or (3325 > 4613)) then
												if (v86 > 10) then
													for v321 = v85[2], v85[3] do
														v83[v321] = nil;
													end
												else
													local FlatIdent_B322 = 0;
													local v154;
													while true do
														if (FlatIdent_B322 == 0) then
															v154 = v85[2];
															v83[v154] = v83[v154](v13(v83, v154 + 1, v78));
															break;
														end
													end
												end
											elseif ((v86 > 12) or (4950 <= 4553)) then
												v83[v85[2]][v83[v85[3]]] = v83[v85[4]];
											elseif not v83[v85[2]] then
												v77 = v77 + 1;
											else
												v77 = v85[3];
											end
										elseif ((2665 <= 3933) and (v86 <= 20)) then
											if ((3273 == 3273) and (v86 <= 16)) then
												if (v86 <= 14) then
													local v116 = v85[2];
													v83[v116] = v83[v116](v13(v83, v116 + 1, v85[3]));
												elseif ((3824 > 409) and (v86 > 15)) then
													do
														return;
													end
												else
													v83[v85[2]] = v83[v85[3]];
												end
											elseif (v86 <= 18) then
												if ((2087 == 2087) and (v86 > 17)) then
													local FlatIdent_84ED3 = 0;
													local v160;
													while true do
														if (0 == FlatIdent_84ED3) then
															v160 = v85[2];
															v83[v160] = v83[v160](v13(v83, v160 + 1, v78));
															break;
														end
													end
												else
													local FlatIdent_40FD3 = 0;
													local v162;
													while true do
														if (FlatIdent_40FD3 == 0) then
															v162 = v85[2];
															v83[v162] = v83[v162]();
															break;
														end
													end
												end
											elseif ((v86 > 19) or (3404 > 4503)) then
												if (v83[v85[2]] ~= v85[4]) then
													v77 = v77 + 1;
												else
													v77 = v85[3];
												end
											else
												v83[v85[2]] = v83[v85[3]] + v85[4];
											end
										elseif ((v86 <= 24) or (3506 <= 1309)) then
											if ((2955 == 2955) and (v86 <= 22)) then
												if (v86 > 21) then
													local FlatIdent_740DC = 0;
													local v165;
													while true do
														if (FlatIdent_740DC == 0) then
															v165 = v85[2];
															v83[v165](v13(v83, v165 + 1, v85[3]));
															break;
														end
													end
												else
													local FlatIdent_1CFC3 = 0;
													local v166;
													while true do
														if (FlatIdent_1CFC3 == 0) then
															v166 = v85[2];
															do
																return v83[v166](v13(v83, v166 + 1, v78));
															end
															break;
														end
													end
												end
											elseif (v86 == 23) then
												local FlatIdent_8CEDF = 0;
												local v167;
												while true do
													if (FlatIdent_8CEDF == 0) then
														v167 = v85[2];
														do
															return v83[v167](v13(v83, v167 + 1, v78));
														end
														break;
													end
												end
											else
												v83[v85[2]] = v85[3] ~= 0;
											end
										elseif (v86 <= 26) then
											if ((v86 == 25) or (2903 == 1495)) then
												v83[v85[2]][v85[3]] = v85[4];
											else
												v77 = v85[3];
											end
										elseif (v86 > 27) then
											local FlatIdent_33EA4 = 0;
											local v172;
											while true do
												if (FlatIdent_33EA4 == 0) then
													v172 = v85[2];
													v83[v172](v13(v83, v172 + 1, v78));
													break;
												end
											end
										else
											local FlatIdent_25DF3 = 0;
											local v173;
											while true do
												if (FlatIdent_25DF3 == 0) then
													v173 = v85[2];
													do
														return v13(v83, v173, v78);
													end
													break;
												end
											end
										end
									elseif (v86 <= 43) then
										if (v86 <= 35) then
											if ((4546 >= 2275) and (v86 <= 31)) then
												if ((819 >= 22) and (v86 <= 29)) then
													v83[v85[2]][v85[3]] = v85[4];
												elseif ((3162 == 3162) and (v86 == 30)) then
													if not v83[v85[2]] then
														v77 = v77 + 1;
													else
														v77 = v85[3];
													end
												else
													local FlatIdent_2DF14 = 0;
													local v174;
													local v175;
													local v176;
													while true do
														if (FlatIdent_2DF14 == 1) then
															v176 = 0;
															for v323 = v174, v85[4] do
																v176 = v176 + 1;
																v83[v323] = v175[v176];
															end
															break;
														end
														if (0 == FlatIdent_2DF14) then
															v174 = v85[2];
															v175 = {v83[v174](v83[v174 + 1])};
															FlatIdent_2DF14 = 1;
														end
													end
												end
											elseif ((v86 <= 33) or (2369 > 4429)) then
												if ((4095 >= 3183) and (v86 == 32)) then
													if (v83[v85[2]] == v85[4]) then
														v77 = v77 + 1;
													else
														v77 = v85[3];
													end
												else
													v83[v85[2]]();
												end
											elseif (v86 == 34) then
												local FlatIdent_5BA5E = 0;
												local v177;
												local v178;
												local v179;
												local v180;
												while true do
													if (FlatIdent_5BA5E == 2) then
														for v326 = v177, v78 do
															local FlatIdent_8BF78 = 0;
															while true do
																if (FlatIdent_8BF78 == 0) then
																	v180 = v180 + 1;
																	v83[v326] = v178[v180];
																	break;
																end
															end
														end
														break;
													end
													if (FlatIdent_5BA5E == 1) then
														v78 = (v179 + v177) - 1;
														v180 = 0;
														FlatIdent_5BA5E = 2;
													end
													if (FlatIdent_5BA5E == 0) then
														v177 = v85[2];
														v178, v179 = v76(v83[v177](v83[v177 + 1]));
														FlatIdent_5BA5E = 1;
													end
												end
											else
												local FlatIdent_817B0 = 0;
												local v181;
												while true do
													if (FlatIdent_817B0 == 0) then
														v181 = v85[2];
														v83[v181](v83[v181 + 1]);
														break;
													end
												end
											end
										elseif ((v86 <= 39) or (3711 < 1008)) then
											if (v86 <= 37) then
												if (v86 > 36) then
													local v182 = v85[2];
													do
														return v83[v182](v13(v83, v182 + 1, v85[3]));
													end
												else
													local FlatIdent_52551 = 0;
													local v183;
													local v184;
													local v185;
													local v186;
													while true do
														if (FlatIdent_52551 == 1) then
															v78 = (v185 + v183) - 1;
															v186 = 0;
															FlatIdent_52551 = 2;
														end
														if (FlatIdent_52551 == 2) then
															for v329 = v183, v78 do
																local FlatIdent_75B50 = 0;
																while true do
																	if (FlatIdent_75B50 == 0) then
																		v186 = v186 + 1;
																		v83[v329] = v184[v186];
																		break;
																	end
																end
															end
															break;
														end
														if (FlatIdent_52551 == 0) then
															v183 = v85[2];
															v184, v185 = v76(v83[v183](v83[v183 + 1]));
															FlatIdent_52551 = 1;
														end
													end
												end
											elseif (v86 == 38) then
												v83[v85[2]] = v58[v85[3]];
											else
												local FlatIdent_5346B = 0;
												local v189;
												local v190;
												local v191;
												while true do
													if (1 == FlatIdent_5346B) then
														v191 = v85[3];
														for v332 = 1, v191 do
															v190[v332] = v83[v189 + v332];
														end
														break;
													end
													if (FlatIdent_5346B == 0) then
														v189 = v85[2];
														v190 = v83[v189];
														FlatIdent_5346B = 1;
													end
												end
											end
										elseif ((v86 <= 41) or (1049 <= 906)) then
											if (v86 > 40) then
												if ((4513 > 2726) and (v83[v85[2]] ~= v83[v85[4]])) then
													v77 = v77 + 1;
												else
													v77 = v85[3];
												end
											elseif v83[v85[2]] then
												v77 = v77 + 1;
											else
												v77 = v85[3];
											end
										elseif ((v86 > 42) or (1481 >= 2658)) then
											v83[v85[2]] = v83[v85[3]] + v83[v85[4]];
										else
											do
												return;
											end
										end
									elseif (v86 <= 50) then
										if ((v86 <= 46) or (3220 == 1364)) then
											if ((v86 <= 44) or (1054 > 3392)) then
												local FlatIdent_5B4A8 = 0;
												local v120;
												local v121;
												while true do
													if (FlatIdent_5B4A8 == 1) then
														for v132 = v120 + 1, v85[4] do
															v121 = v121 .. v83[v132];
														end
														v83[v85[2]] = v121;
														break;
													end
													if (FlatIdent_5B4A8 == 0) then
														v120 = v85[3];
														v121 = v83[v120];
														FlatIdent_5B4A8 = 1;
													end
												end
											elseif ((v86 > 45) or (676 >= 1642)) then
												if (v83[v85[2]] < v85[4]) then
													v77 = v77 + 1;
												else
													v77 = v85[3];
												end
											else
												v83[v85[2]] = v83[v85[3]] + v85[4];
											end
										elseif ((4136 > 2397) and (v86 <= 48)) then
											if (v86 > 47) then
												v83[v85[2]]();
											else
												v83[v85[2]] = v83[v85[3]][v85[4]];
											end
										elseif ((v86 > 49) or (4334 == 4245)) then
											local v196 = v85[2];
											local v197 = v83[v196];
											for v335 = v196 + 1, v85[3] do
												v7(v197, v83[v335]);
											end
										else
											v59[v85[3]] = v83[v85[2]];
										end
									elseif ((v86 <= 54) or (4276 <= 3031)) then
										if ((v86 <= 52) or (4782 <= 1199)) then
											if (v86 > 51) then
												if (v83[v85[2]] == v83[v85[4]]) then
													v77 = v77 + 1;
												else
													v77 = v85[3];
												end
											else
												v83[v85[2]] = v83[v85[3]] + v83[v85[4]];
											end
										elseif ((v86 == 53) or (4864 < 1902)) then
											v83[v85[2]] = v59[v85[3]];
										else
											local FlatIdent_9525B = 0;
											local v203;
											while true do
												if (FlatIdent_9525B == 0) then
													v203 = v85[2];
													do
														return v13(v83, v203, v203 + v85[3]);
													end
													break;
												end
											end
										end
									elseif (v86 <= 56) then
										if ((4839 >= 3700) and (v86 == 55)) then
											v83[v85[2]] = v29(v74[v85[3]], nil, v59);
										else
											v83[v85[2]] = {};
										end
									elseif ((v86 == 57) or (1075 > 1918)) then
										local FlatIdent_91A09 = 0;
										local v206;
										local v207;
										local v208;
										local v209;
										while true do
											if (FlatIdent_91A09 == 1) then
												v78 = (v208 + v206) - 1;
												v209 = 0;
												FlatIdent_91A09 = 2;
											end
											if (FlatIdent_91A09 == 0) then
												v206 = v85[2];
												v207, v208 = v76(v83[v206]());
												FlatIdent_91A09 = 1;
											end
											if (FlatIdent_91A09 == 2) then
												for v336 = v206, v78 do
													v209 = v209 + 1;
													v83[v336] = v207[v209];
												end
												break;
											end
										end
									else
										v83[v85[2]][v83[v85[3]]] = v83[v85[4]];
									end
								elseif (v86 <= 87) then
									if (v86 <= 72) then
										if ((396 <= 3804) and (v86 <= 65)) then
											if (v86 <= 61) then
												if (v86 <= 59) then
													v83[v85[2]] = v29(v74[v85[3]], nil, v59);
												elseif (v86 > 60) then
													v83[v85[2]] = v83[v85[3]] * v85[4];
												else
													local FlatIdent_49280 = 0;
													local v213;
													local v214;
													local v215;
													while true do
														if (FlatIdent_49280 == 0) then
															v213 = v85[2];
															v214 = {v83[v213](v13(v83, v213 + 1, v85[3]))};
															FlatIdent_49280 = 1;
														end
														if (FlatIdent_49280 == 1) then
															v215 = 0;
															for v339 = v213, v85[4] do
																v215 = v215 + 1;
																v83[v339] = v214[v215];
															end
															break;
														end
													end
												end
											elseif ((v86 <= 63) or (4169 == 2187)) then
												if ((1406 == 1406) and (v86 == 62)) then
													local FlatIdent_86634 = 0;
													local v216;
													local v217;
													while true do
														if (FlatIdent_86634 == 0) then
															v216 = v85[3];
															v217 = v83[v216];
															FlatIdent_86634 = 1;
														end
														if (FlatIdent_86634 == 1) then
															for v342 = v216 + 1, v85[4] do
																v217 = v217 .. v83[v342];
															end
															v83[v85[2]] = v217;
															break;
														end
													end
												else
													v83[v85[2]] = v83[v85[3]] / v85[4];
												end
											elseif (v86 == 64) then
												v83[v85[2]] = v85[3] ~= 0;
											else
												local FlatIdent_2E9CB = 0;
												local v221;
												local v222;
												local v223;
												local v224;
												local v225;
												while true do
													if (FlatIdent_2E9CB == 3) then
														if ((1531 < 4271) and v225) then
															local FlatIdent_45D37 = 0;
															while true do
																if (FlatIdent_45D37 == 0) then
																	v83[v223] = v225;
																	v77 = v85[3];
																	break;
																end
															end
														else
															v77 = v77 + 1;
														end
														break;
													end
													if (FlatIdent_2E9CB == 0) then
														v221 = v85[2];
														v222 = v85[4];
														FlatIdent_2E9CB = 1;
													end
													if (FlatIdent_2E9CB == 2) then
														for v343 = 1, v222 do
															v83[v223 + v343] = v224[v343];
														end
														v225 = v224[1];
														FlatIdent_2E9CB = 3;
													end
													if (FlatIdent_2E9CB == 1) then
														v223 = v221 + 2;
														v224 = {v83[v221](v83[v221 + 1], v83[v223])};
														FlatIdent_2E9CB = 2;
													end
												end
											end
										elseif (v86 <= 68) then
											if ((635 == 635) and (v86 <= 66)) then
												v83[v85[2]] = v85[3] ~= 0;
												v77 = v77 + 1;
											elseif (v86 == 67) then
												if ((3373 <= 3556) and v83[v85[2]]) then
													v77 = v77 + 1;
												else
													v77 = v85[3];
												end
											else
												v83[v85[2]] = v83[v85[3]];
											end
										elseif ((v86 <= 70) or (3291 < 3280)) then
											if ((4386 >= 873) and (v86 > 69)) then
												v83[v85[2]] = #v83[v85[3]];
											else
												v59[v85[3]] = v83[v85[2]];
											end
										elseif (v86 > 71) then
											do
												return v83[v85[2]];
											end
										else
											local v231 = v85[2];
											v83[v231] = v83[v231]();
										end
									elseif ((921 <= 1102) and (v86 <= 79)) then
										if (v86 <= 75) then
											if (v86 <= 73) then
												local FlatIdent_6A091 = 0;
												local v125;
												local v126;
												while true do
													if (1 == FlatIdent_6A091) then
														for v133 = 1, #v82 do
															local FlatIdent_6D9D2 = 0;
															local v134;
															while true do
																if (FlatIdent_6D9D2 == 0) then
																	v134 = v82[v133];
																	for v233 = 0, #v134 do
																		local FlatIdent_6225E = 0;
																		local v234;
																		local v235;
																		local v236;
																		while true do
																			if (FlatIdent_6225E == 1) then
																				v236 = v234[2];
																				if ((4706 >= 963) and (v235 == v83) and (v236 >= v125)) then
																					local FlatIdent_7FF2C = 0;
																					while true do
																						if (0 == FlatIdent_7FF2C) then
																							v126[v236] = v235[v236];
																							v234[1] = v126;
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if (FlatIdent_6225E == 0) then
																				v234 = v134[v233];
																				v235 = v234[1];
																				FlatIdent_6225E = 1;
																			end
																		end
																	end
																	break;
																end
															end
														end
														break;
													end
													if (FlatIdent_6A091 == 0) then
														v125 = v85[2];
														v126 = {};
														FlatIdent_6A091 = 1;
													end
												end
											elseif ((v86 > 74) or (960 <= 876)) then
												v83[v85[2]] = v85[3];
											elseif (v83[v85[2]] ~= v85[4]) then
												v77 = v77 + 1;
											else
												v77 = v85[3];
											end
										elseif (v86 <= 77) then
											if (v86 == 76) then
												local v239 = v85[2];
												do
													return v83[v239](v13(v83, v239 + 1, v85[3]));
												end
											else
												v83[v85[2]] = v83[v85[3]] / v83[v85[4]];
											end
										elseif ((v86 == 78) or (2066 == 932)) then
											v83[v85[2]] = v83[v85[3]] - v83[v85[4]];
										else
											v83[v85[2]] = v85[3];
										end
									elseif (v86 <= 83) then
										if ((4825 < 4843) and (v86 <= 81)) then
											if (v86 > 80) then
												v83[v85[2]] = v59[v85[3]];
											else
												v83[v85[2]] = v83[v85[3]] * v85[4];
											end
										elseif ((v86 == 82) or (3877 >= 4537)) then
											local FlatIdent_21449 = 0;
											local v247;
											while true do
												if (FlatIdent_21449 == 0) then
													v247 = v85[2];
													do
														return v13(v83, v247, v78);
													end
													break;
												end
											end
										else
											local FlatIdent_2D7B8 = 0;
											local v248;
											while true do
												if (0 == FlatIdent_2D7B8) then
													v248 = v83[v85[4]];
													if (not v248 or (4315 < 1726)) then
														v77 = v77 + 1;
													else
														local FlatIdent_67691 = 0;
														while true do
															if (FlatIdent_67691 == 0) then
																v83[v85[2]] = v248;
																v77 = v85[3];
																break;
															end
														end
													end
													break;
												end
											end
										end
									elseif ((v86 <= 85) or (3679 < 625)) then
										if ((v86 == 84) or (4625 < 632)) then
											v83[v85[2]][v85[3]] = v83[v85[4]];
										else
											v83[v85[2]] = v83[v85[3]][v83[v85[4]]];
										end
									elseif ((v86 > 86) or (83 > 1780)) then
										v58[v85[3]] = v83[v85[2]];
									else
										do
											return v83[v85[2]];
										end
									end
								elseif (v86 <= 102) then
									if (v86 <= 94) then
										if (v86 <= 90) then
											if (v86 <= 88) then
												local FlatIdent_5EF9 = 0;
												local v127;
												local v128;
												local v129;
												while true do
													if (FlatIdent_5EF9 == 1) then
														v129 = v85[3];
														for v135 = 1, v129 do
															v128[v135] = v83[v127 + v135];
														end
														break;
													end
													if (FlatIdent_5EF9 == 0) then
														v127 = v85[2];
														v128 = v83[v127];
														FlatIdent_5EF9 = 1;
													end
												end
											elseif ((546 <= 1077) and (v86 == 89)) then
												local v255 = v74[v85[3]];
												local v256;
												local v257 = {};
												v256 = v10({}, {[LUAOBFUSACTOR_DECRYPT_STR_0("\28\242\35\203\248\38\213", "\156\67\173\74\165")]=function(v346, v347)
													local FlatIdent_1CA5D = 0;
													local v348;
													while true do
														if (FlatIdent_1CA5D == 0) then
															v348 = v257[v347];
															return v348[1][v348[2]];
														end
													end
												end,[LUAOBFUSACTOR_DECRYPT_STR_0("\11\136\71\19\171\47\72\48\178\81", "\38\84\215\41\118\220\70")]=function(v349, v350, v351)
													local FlatIdent_272FB = 0;
													local v352;
													while true do
														if (FlatIdent_272FB == 0) then
															v352 = v257[v350];
															v352[1][v352[2]] = v351;
															break;
														end
													end
												end});
												for v354 = 1, v85[4] do
													local FlatIdent_16F8D = 0;
													local v355;
													while true do
														if (FlatIdent_16F8D == 1) then
															if (v355[1] == 15) then
																v257[v354 - 1] = {v83,v355[3]};
															else
																v257[v354 - 1] = {v58,v355[3]};
															end
															v82[#v82 + 1] = v257;
															break;
														end
														if (FlatIdent_16F8D == 0) then
															v77 = v77 + 1;
															v355 = v73[v77];
															FlatIdent_16F8D = 1;
														end
													end
												end
												v83[v85[2]] = v29(v255, v256, v59);
											else
												local FlatIdent_8ABD6 = 0;
												local v259;
												local v260;
												local v261;
												while true do
													if (FlatIdent_8ABD6 == 0) then
														v259 = v85[2];
														v260 = {v83[v259](v13(v83, v259 + 1, v78))};
														FlatIdent_8ABD6 = 1;
													end
													if (FlatIdent_8ABD6 == 1) then
														v261 = 0;
														for v357 = v259, v85[4] do
															local FlatIdent_8EF6C = 0;
															while true do
																if (0 == FlatIdent_8EF6C) then
																	v261 = v261 + 1;
																	v83[v357] = v260[v261];
																	break;
																end
															end
														end
														break;
													end
												end
											end
										elseif (v86 <= 92) then
											if ((v86 > 91) or (996 > 4301)) then
												if (v83[v85[2]] == v83[v85[4]]) then
													v77 = v77 + 1;
												else
													v77 = v85[3];
												end
											else
												local FlatIdent_81DE9 = 0;
												local v262;
												local v263;
												while true do
													if (FlatIdent_81DE9 == 0) then
														v262 = v85[2];
														v263 = v83[v85[3]];
														FlatIdent_81DE9 = 1;
													end
													if (FlatIdent_81DE9 == 1) then
														v83[v262 + 1] = v263;
														v83[v262] = v263[v85[4]];
														break;
													end
												end
											end
										elseif ((4070 > 687) and (v86 > 93)) then
											local FlatIdent_2E34E = 0;
											local v267;
											while true do
												if (FlatIdent_2E34E == 0) then
													v267 = v85[2];
													v83[v267] = v83[v267](v13(v83, v267 + 1, v85[3]));
													break;
												end
											end
										else
											local FlatIdent_7DB9E = 0;
											local v269;
											while true do
												if (FlatIdent_7DB9E == 0) then
													v269 = v85[2];
													v83[v269](v83[v269 + 1]);
													break;
												end
											end
										end
									elseif ((v86 <= 98) or (656 >= 3330)) then
										if ((v86 <= 96) or (2492 <= 335)) then
											if (v86 == 95) then
												local v270 = v85[2];
												v83[v270] = v83[v270](v83[v270 + 1]);
											else
												local FlatIdent_2A9F7 = 0;
												local v272;
												local v273;
												while true do
													if (FlatIdent_2A9F7 == 0) then
														v272 = v85[2];
														v273 = v83[v85[3]];
														FlatIdent_2A9F7 = 1;
													end
													if (FlatIdent_2A9F7 == 1) then
														v83[v272 + 1] = v273;
														v83[v272] = v273[v85[4]];
														break;
													end
												end
											end
										elseif ((4322 >= 2562) and (v86 == 97)) then
											local FlatIdent_79F35 = 0;
											local v277;
											local v278;
											while true do
												if (FlatIdent_79F35 == 0) then
													v277 = v85[2];
													v278 = {};
													FlatIdent_79F35 = 1;
												end
												if (1 == FlatIdent_79F35) then
													for v360 = 1, #v82 do
														local FlatIdent_397D1 = 0;
														local v361;
														while true do
															if (FlatIdent_397D1 == 0) then
																v361 = v82[v360];
																for v404 = 0, #v361 do
																	local v405 = v361[v404];
																	local v406 = v405[1];
																	local v407 = v405[2];
																	if (((v406 == v83) and (v407 >= v277)) or (3637 >= 3770)) then
																		local FlatIdent_6AEED = 0;
																		while true do
																			if (FlatIdent_6AEED == 0) then
																				v278[v407] = v406[v407];
																				v405[1] = v278;
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										else
											v83[v85[2]][v85[3]] = v83[v85[4]];
										end
									elseif (v86 <= 100) then
										if (v86 > 99) then
											local FlatIdent_61F8A = 0;
											local v281;
											local v282;
											local v283;
											while true do
												if (FlatIdent_61F8A == 1) then
													v283 = 0;
													for v362 = v281, v85[4] do
														local FlatIdent_5E109 = 0;
														while true do
															if (FlatIdent_5E109 == 0) then
																v283 = v283 + 1;
																v83[v362] = v282[v283];
																break;
															end
														end
													end
													break;
												end
												if (FlatIdent_61F8A == 0) then
													v281 = v85[2];
													v282 = {v83[v281](v83[v281 + 1])};
													FlatIdent_61F8A = 1;
												end
											end
										elseif ((v83[v85[2]] == v85[4]) or (2379 > 4578)) then
											v77 = v77 + 1;
										else
											v77 = v85[3];
										end
									elseif ((v86 == 101) or (483 > 743)) then
										v83[v85[2]] = v83[v85[3]][v83[v85[4]]];
									elseif ((2454 > 578) and (v85[2] <= v83[v85[4]])) then
										v77 = v77 + 1;
									else
										v77 = v85[3];
									end
								elseif ((930 < 4458) and (v86 <= 109)) then
									if (v86 <= 105) then
										if (v86 <= 103) then
											v83[v85[2]] = v83[v85[3]][v85[4]];
										elseif ((662 <= 972) and (v86 > 104)) then
											if ((4370 == 4370) and (v85[2] <= v83[v85[4]])) then
												v77 = v77 + 1;
											else
												v77 = v85[3];
											end
										else
											local v286 = v83[v85[4]];
											if (not v286 or (4762 <= 861)) then
												v77 = v77 + 1;
											else
												local FlatIdent_2DA99 = 0;
												while true do
													if (FlatIdent_2DA99 == 0) then
														v83[v85[2]] = v286;
														v77 = v85[3];
														break;
													end
												end
											end
										end
									elseif ((v86 <= 107) or (1412 == 4264)) then
										if ((v86 > 106) or (3168 < 2153)) then
											v77 = v85[3];
										elseif ((v83[v85[2]] < v85[4]) or (4976 < 1332)) then
											v77 = v77 + 1;
										else
											v77 = v85[3];
										end
									elseif (v86 == 108) then
										local FlatIdent_31ECC = 0;
										local v288;
										local v289;
										local v290;
										local v291;
										local v292;
										while true do
											if (FlatIdent_31ECC == 0) then
												v288 = v85[2];
												v289 = v85[4];
												FlatIdent_31ECC = 1;
											end
											if (FlatIdent_31ECC == 2) then
												for v365 = 1, v289 do
													v83[v290 + v365] = v291[v365];
												end
												v292 = v291[1];
												FlatIdent_31ECC = 3;
											end
											if (FlatIdent_31ECC == 3) then
												if ((4628 == 4628) and v292) then
													local FlatIdent_82923 = 0;
													while true do
														if (FlatIdent_82923 == 0) then
															v83[v290] = v292;
															v77 = v85[3];
															break;
														end
													end
												else
													v77 = v77 + 1;
												end
												break;
											end
											if (FlatIdent_31ECC == 1) then
												v290 = v288 + 2;
												v291 = {v83[v288](v83[v288 + 1], v83[v290])};
												FlatIdent_31ECC = 2;
											end
										end
									else
										v83[v85[2]] = {};
									end
								elseif (v86 <= 113) then
									if ((v86 <= 111) or (54 == 395)) then
										if (v86 == 110) then
											v83[v85[2]] = v83[v85[3]] / v85[4];
										else
											local FlatIdent_28E8A = 0;
											local v295;
											local v296;
											local v297;
											local v298;
											while true do
												if (1 == FlatIdent_28E8A) then
													v78 = (v297 + v295) - 1;
													v298 = 0;
													FlatIdent_28E8A = 2;
												end
												if (FlatIdent_28E8A == 2) then
													for v368 = v295, v78 do
														local FlatIdent_83844 = 0;
														while true do
															if (FlatIdent_83844 == 0) then
																v298 = v298 + 1;
																v83[v368] = v296[v298];
																break;
															end
														end
													end
													break;
												end
												if (FlatIdent_28E8A == 0) then
													v295 = v85[2];
													v296, v297 = v76(v83[v295]());
													FlatIdent_28E8A = 1;
												end
											end
										end
									elseif ((82 == 82) and (v86 == 112)) then
										v58[v85[3]] = v83[v85[2]];
									else
										v83[v85[2]] = v58[v85[3]];
									end
								elseif (v86 <= 115) then
									if ((v86 == 114) or (581 < 282)) then
										local FlatIdent_7063 = 0;
										local v303;
										local v304;
										local v305;
										while true do
											if (FlatIdent_7063 == 0) then
												v303 = v74[v85[3]];
												v304 = nil;
												FlatIdent_7063 = 1;
											end
											if (FlatIdent_7063 == 2) then
												for v379 = 1, v85[4] do
													local FlatIdent_3CDED = 0;
													local v380;
													while true do
														if (0 == FlatIdent_3CDED) then
															v77 = v77 + 1;
															v380 = v73[v77];
															FlatIdent_3CDED = 1;
														end
														if (FlatIdent_3CDED == 1) then
															if (v380[1] == 15) then
																v305[v379 - 1] = {v83,v380[3]};
															else
																v305[v379 - 1] = {v58,v380[3]};
															end
															v82[#v82 + 1] = v305;
															break;
														end
													end
												end
												v83[v85[2]] = v29(v303, v304, v59);
												break;
											end
											if (FlatIdent_7063 == 1) then
												v305 = {};
												v304 = v10({}, {[LUAOBFUSACTOR_DECRYPT_STR_0("\111\41\43\28\250\85\14", "\158\48\118\66\114")]=function(v371, v372)
													local FlatIdent_5C97A = 0;
													local v373;
													while true do
														if (FlatIdent_5C97A == 0) then
															v373 = v305[v372];
															return v373[1][v373[2]];
														end
													end
												end,[LUAOBFUSACTOR_DECRYPT_STR_0("\148\27\30\51\100\172\245\175\33\8", "\155\203\68\112\86\19\197")]=function(v374, v375, v376)
													local FlatIdent_651C5 = 0;
													local v377;
													while true do
														if (FlatIdent_651C5 == 0) then
															v377 = v305[v375];
															v377[1][v377[2]] = v376;
															break;
														end
													end
												end});
												FlatIdent_7063 = 2;
											end
										end
									else
										v83[v85[2]] = v83[v85[3]] / v83[v85[4]];
									end
								elseif ((v86 > 116) or (4609 < 2495)) then
									local FlatIdent_3B868 = 0;
									local v308;
									local v309;
									local v310;
									while true do
										if (FlatIdent_3B868 == 0) then
											v308 = v85[2];
											v309 = {v83[v308](v13(v83, v308 + 1, v85[3]))};
											FlatIdent_3B868 = 1;
										end
										if (1 == FlatIdent_3B868) then
											v310 = 0;
											for v382 = v308, v85[4] do
												local FlatIdent_829F9 = 0;
												while true do
													if (FlatIdent_829F9 == 0) then
														v310 = v310 + 1;
														v83[v382] = v309[v310];
														break;
													end
												end
											end
											break;
										end
									end
								else
									local FlatIdent_89562 = 0;
									while true do
										if (FlatIdent_89562 == 0) then
											v83[v85[2]] = v85[3] ~= 0;
											v77 = v77 + 1;
											break;
										end
									end
								end
								v77 = v77 + 1;
								break;
							end
						end
					end
					break;
				end
				if (FlatIdent_1BAD7 == 3) then
					v82 = {};
					v83 = {};
					for v90 = 0, v81 do
						if (v90 >= v75) then
							v79[v90 - v75] = v80[v90 + 1];
						else
							v83[v90] = v80[v90 + 1];
						end
					end
					FlatIdent_1BAD7 = 4;
				end
				if (FlatIdent_1BAD7 == 2) then
					v79 = {};
					v80 = {...};
					v81 = v12("#", ...) - 1;
					FlatIdent_1BAD7 = 3;
				end
				if (FlatIdent_1BAD7 == 1) then
					v76 = v27;
					v77 = 1;
					v78 = -1;
					FlatIdent_1BAD7 = 2;
				end
				if (0 == FlatIdent_1BAD7) then
					v73 = v60;
					v74 = v61;
					v75 = v62;
					FlatIdent_1BAD7 = 1;
				end
				if (FlatIdent_1BAD7 == 4) then
					v84 = (v81 - v75) + 1;
					v85 = nil;
					v86 = nil;
					FlatIdent_1BAD7 = 5;
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
